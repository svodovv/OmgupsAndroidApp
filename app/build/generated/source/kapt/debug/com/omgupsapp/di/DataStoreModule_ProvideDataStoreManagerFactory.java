// Generated by Dagger (https://dagger.dev).
package com.omgupsapp.di;

import android.app.Application;
import com.omgupsapp.data.local.DataStore.DataStoreManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataStoreModule_ProvideDataStoreManagerFactory implements Factory<DataStoreManager> {
  private final Provider<Application> appProvider;

  public DataStoreModule_ProvideDataStoreManagerFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public DataStoreManager get() {
    return provideDataStoreManager(appProvider.get());
  }

  public static DataStoreModule_ProvideDataStoreManagerFactory create(
      Provider<Application> appProvider) {
    return new DataStoreModule_ProvideDataStoreManagerFactory(appProvider);
  }

  public static DataStoreManager provideDataStoreManager(Application app) {
    return Preconditions.checkNotNullFromProvides(DataStoreModule.INSTANCE.provideDataStoreManager(app));
  }
}
