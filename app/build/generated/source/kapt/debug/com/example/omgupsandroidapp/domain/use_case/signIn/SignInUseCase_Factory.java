// Generated by Dagger (https://dagger.dev).
package com.example.omgupsandroidapp.domain.use_case.signIn;

import com.omgupsapp.data.local.DataStore.DataStoreManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SignInUseCase_Factory implements Factory<SignInUseCase> {
  private final Provider<DataStoreManager> dataStoreManagerProvider;

  public SignInUseCase_Factory(Provider<DataStoreManager> dataStoreManagerProvider) {
    this.dataStoreManagerProvider = dataStoreManagerProvider;
  }

  @Override
  public SignInUseCase get() {
    return newInstance(dataStoreManagerProvider.get());
  }

  public static SignInUseCase_Factory create(Provider<DataStoreManager> dataStoreManagerProvider) {
    return new SignInUseCase_Factory(dataStoreManagerProvider);
  }

  public static SignInUseCase newInstance(DataStoreManager dataStoreManager) {
    return new SignInUseCase(dataStoreManager);
  }
}
