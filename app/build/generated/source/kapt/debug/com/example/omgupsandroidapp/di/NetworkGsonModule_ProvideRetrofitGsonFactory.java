// Generated by Dagger (https://dagger.dev).
package com.example.omgupsandroidapp.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkGsonModule_ProvideRetrofitGsonFactory implements Factory<Retrofit> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public NetworkGsonModule_ProvideRetrofitGsonFactory(Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public Retrofit get() {
    return provideRetrofitGson(okHttpClientProvider.get());
  }

  public static NetworkGsonModule_ProvideRetrofitGsonFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new NetworkGsonModule_ProvideRetrofitGsonFactory(okHttpClientProvider);
  }

  public static Retrofit provideRetrofitGson(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(NetworkGsonModule.INSTANCE.provideRetrofitGson(okHttpClient));
  }
}
