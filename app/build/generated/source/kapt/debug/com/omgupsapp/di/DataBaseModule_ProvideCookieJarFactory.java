// Generated by Dagger (https://dagger.dev).
package com.omgupsapp.di;

import com.example.omgupsandroidapp.data.local.Room.Cookie.CookieDao;
import com.omgupsapp.data.local.Room.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DataBaseModule_ProvideCookieJarFactory implements Factory<CookieDao> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public DataBaseModule_ProvideCookieJarFactory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public CookieDao get() {
    return provideCookieJar(appDatabaseProvider.get());
  }

  public static DataBaseModule_ProvideCookieJarFactory create(
      Provider<AppDatabase> appDatabaseProvider) {
    return new DataBaseModule_ProvideCookieJarFactory(appDatabaseProvider);
  }

  public static CookieDao provideCookieJar(AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(DataBaseModule.INSTANCE.provideCookieJar(appDatabase));
  }
}
