// Generated by Dagger (https://dagger.dev).
package com.example.omgupsandroidapp.presentation.ui.ServicesScreen.services.SpravkaScreen;

import com.example.omgupsandroidapp.domain.use_case.service.spravki.GetTypesSpravkiUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SpravkiViewModel_Factory implements Factory<SpravkiViewModel> {
  private final Provider<GetTypesSpravkiUseCase> getTypesSpravkiUseCaseProvider;

  public SpravkiViewModel_Factory(Provider<GetTypesSpravkiUseCase> getTypesSpravkiUseCaseProvider) {
    this.getTypesSpravkiUseCaseProvider = getTypesSpravkiUseCaseProvider;
  }

  @Override
  public SpravkiViewModel get() {
    return newInstance(getTypesSpravkiUseCaseProvider.get());
  }

  public static SpravkiViewModel_Factory create(
      Provider<GetTypesSpravkiUseCase> getTypesSpravkiUseCaseProvider) {
    return new SpravkiViewModel_Factory(getTypesSpravkiUseCaseProvider);
  }

  public static SpravkiViewModel newInstance(GetTypesSpravkiUseCase getTypesSpravkiUseCase) {
    return new SpravkiViewModel(getTypesSpravkiUseCase);
  }
}
