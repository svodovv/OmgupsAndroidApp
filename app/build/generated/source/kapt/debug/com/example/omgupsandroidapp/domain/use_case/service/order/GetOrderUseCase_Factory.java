// Generated by Dagger (https://dagger.dev).
package com.example.omgupsandroidapp.domain.use_case.service.order;

import com.example.omgupsandroidapp.data.repository.ServiceRepositoryImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetOrderUseCase_Factory implements Factory<GetOrderUseCase> {
  private final Provider<ServiceRepositoryImpl> serviceRepositoryImplProvider;

  public GetOrderUseCase_Factory(Provider<ServiceRepositoryImpl> serviceRepositoryImplProvider) {
    this.serviceRepositoryImplProvider = serviceRepositoryImplProvider;
  }

  @Override
  public GetOrderUseCase get() {
    return newInstance(serviceRepositoryImplProvider.get());
  }

  public static GetOrderUseCase_Factory create(
      Provider<ServiceRepositoryImpl> serviceRepositoryImplProvider) {
    return new GetOrderUseCase_Factory(serviceRepositoryImplProvider);
  }

  public static GetOrderUseCase newInstance(ServiceRepositoryImpl serviceRepositoryImpl) {
    return new GetOrderUseCase(serviceRepositoryImpl);
  }
}
