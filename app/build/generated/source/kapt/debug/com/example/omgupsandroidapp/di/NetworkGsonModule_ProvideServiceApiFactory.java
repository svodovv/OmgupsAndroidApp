// Generated by Dagger (https://dagger.dev).
package com.example.omgupsandroidapp.di;

import com.example.omgupsandroidapp.data.remote.Retrofit.ServiceApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkGsonModule_ProvideServiceApiFactory implements Factory<ServiceApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkGsonModule_ProvideServiceApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ServiceApi get() {
    return provideServiceApi(retrofitProvider.get());
  }

  public static NetworkGsonModule_ProvideServiceApiFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkGsonModule_ProvideServiceApiFactory(retrofitProvider);
  }

  public static ServiceApi provideServiceApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkGsonModule.INSTANCE.provideServiceApi(retrofit));
  }
}
